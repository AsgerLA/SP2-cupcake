@startuml

interface Thymeleaf {
    NOT A REAL CLASS.
    Shows interface between controllers and thymeleaf html
    attribute("bottoms", OrderMapper.getBottoms());
    attribute("toppings", OrderMapper.getToppings());

    attribute("orders", OrderMapper.getUserOrders());

    sessionAttribute("user", user);
}

class Main {
    Server.start()
}

class Server {
    + static Database db;
    + static void start()
}

class OrderController {
    + static addRoutes(Javalin app);
    + static void serveOrdersPage(Context ctx);
    + static void handleOrderPost(Context ctx);
    + static void handleRemoveOrderPost(Context ctx);
}

class User {
    int id;
    String email;
    double balance;
    boolean admin;
}

class UserMapper {
    + static User login(String email, String password);
    + static boolean register(String email, String password);
    + static List<User> getUsers();
    + static User getUser(int userId);
    + static boolean delUser(int userId);
    + static boolean setBalance(int userId, double balance);
}

class UserController {
    + static void addRoutes(Javalin app);
    + static void serveLoginPage(Context ctx);
    + static void serveRegisterPage(Context ctx);
    + static void handleLoginPost(Context ctx);
    + static void handleLogoutPost(Context ctx);
    + static void handleRegisterPost(Context ctx);
}

class Topping {
    int id;
    String name;
    double price;
}

class Bottom {
    int id;
    String name;
    double price;
}

class Order {
    int id;
    String topping;
    String bottom;
    double price;
}

class OrderMapper {
    + static List<Order> getUserOrders(int userId);
    + static boolean addUserOrder(int userId, int topId, int botId);
    + static List<Order> getAllOrders();
    + static List<Topping> getToppings();
    + static List<Bottoms> getBottoms();
}

class Database {
    + Database(String username, String password, String url);
    + Connection getConnection();
}

class DatabaseException {
}

Database -* DatabaseException
Server ---* Database

Main -* Server
Server --* UserController
Server --* OrderController
OrderMapper *---* Server
OrderMapper *-- OrderController
OrderMapper --* Topping
OrderMapper --* Bottom
OrderMapper --* Order
UserMapper *---* Server
UserMapper *-- UserController
UserMapper --* User


@enduml